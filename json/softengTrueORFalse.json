[
  {
    "question":"User requirements are typically stated in natural language.",
    "a" : "True",
    "b" : "False",
    "answer":"True"
  },

  {
    "question":"Software is abstracted and intangible.",
    "a" : "True",
    "b" : "False",
    "answer":"True"
  },

  {
    "question":"Based on the transformation of a mathematical specification through different representations to an executable program.",
    "a" : "True",
    "b" : "False",
    "answer":"True"
  },

  {
    "question":"Transformations are ‘Cleanroom’ so it is straightforward to show that the program conforms to its specification.",
    "a" : "True",
    "b" : "False",
    "answer":"False"
  },

  {
    "question":"Based on the idea of manufacturing semiconductors in a “cleanroom environment”.",
    "a" : "True",
    "b" : "False",
    "answer":"True"
  },

  {
    "question":"Communication focuses on unit tests (written before the code is made) and running periodic integration tests; functional tests are conducted based on the “user stories”; programmers and customers get concrete feedback.",
    "a" : "True",
    "b" : "False",
    "answer":"False"
  },

  {
    "question":"Feedback favors simple designs, common metaphors, collaboration of users and programmers, frequent verbal communication, and feedback.",
    "a" : "True",
    "b" : "False",
    "answer":"False"
  },

  {
    "question":"Courage code for today and not tomorrow; refactoring; persistence; knowing when to throw code away.",
    "a" : "True",
    "b" : "False",
    "answer":"True"
  },

  {
    "question":"Black Box shows data implementation but hides process implementation; describes how 'state' information is transformed.",
    "a" : "True",
    "b" : "False",
    "answer":"False"
  },

  {
    "question":"Clear Box hides data implementation and process implementation. It describes how a system responds to stimuli, usually in a formal specification language.",
    "a" : "True",
    "b" : "False",
    "answer":"False"
  }
]